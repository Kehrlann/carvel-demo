#@ load("@ytt:template", "template")
#@ load("@ytt:data", "data")

#@ def app_configmap(app_name, app_html):
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ app_name
  namespace: default
  annotations:
    kapp.k14s.io/versioned: ""
    kapp.k14s.io/versioned-keep-original: ""
data:
  index.html: #@ app_html
#@ end

#@ def app_resources(app_name):
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: #@ app_name
  name: #@ app_name
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #@ app_name
  template:
    metadata:
      labels:
        app: #@ app_name
    spec:
      containers:
      - image: bitnami/nginx:1.25.2
        name: nginx
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: #@ app_name
        resources:
          limits:
            memory: 20M
        volumeMounts:
        - mountPath: /app
          name: app-data
      volumes:
      - name: app-data
        configMap:
          name: strawberries
---
apiVersion: v1
kind: Service
metadata:
  name: #@ app_name
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: #@ app_name
  ports:
  - name: #@ app_name
    port: 8080
    targetPort: #@ app_name
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #@ app_name
  namespace: default
spec:
  rules:
  - host: #@ app_name + ".127.0.0.1.nip.io"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: #@ app_name
            port:
              name: #@ app_name
#@ end

#@ for app in data.values.apps:
--- #@ template.replace(app_configmap(app.name, app.html))
#@ if app.public:
--- #@ template.replace(app_resources(app.name))
#@ end
#@ end
