#@ load("@ytt:template", "template")
#@ load("@ytt:data", "data")
#@ load("@ytt:overlay", "overlay")

#@ private_apps = [app for app in data.values.apps if not app.public]
#@ static_file_dir = "/var/www/static/"

#@ def oauth2_proxy_deploy():
kind: Deployment
metadata:
  name: oauth2-proxy
#@ end

#! Add volumes to the OAuth2 proxy Deployment for every non-public app
#! Add them to /var/www/static/
#@overlay/match by=overlay.subset(oauth2_proxy_deploy()), expects=1
---
spec:
  template:
    spec:
      containers:
        #@overlay/match by="name"
        - name: oauth2-proxy
          volumeMounts:
            #@ for/end app in private_apps:
            - mountPath: #@ static_file_dir + app.name
              name: #@ app.name
      volumes:
        #@ for/end app in private_apps:
        - name: #@ app.name
          configMap: 
            name: #@ app.name



#@ def oauth2_proxy_configmap():
kind: ConfigMap
metadata:
  name: oauth2-proxy-config
#@ end

#@ def replace_upstreams(current, _):
#@   new_lines = []
#@   for line in current.splitlines():
#@     if line.startswith("upstreams="):
#@       new_lines.append('upstreams="file://%s#/"' % static_file_dir)
#@     else:
#@       new_lines.append(line)
#@     end
#@   end
#@   return "\n".join(new_lines)
#@ end

#! Update the configuration ConfigMap to point the upstreams to
#! the correct directory
#@overlay/match by=overlay.subset(oauth2_proxy_configmap()), expects=1
---
data:
  #@overlay/replace via=replace_upstreams
  oauth2-proxy.cfg: 